<?php

namespace AppBundle\Repository;

use AppBundle\Entity\User;
use AppBundle\Entity\UserInTraining;

/**
 * TrainingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TrainingRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function getAvailableTrainings($user) {
        $query = $this->createQueryBuilder('t')
                     ->where('t.starts_at >= :start_at')
                     ->setParameter('start_at', new \DateTime('now'))
                     ->orderBy('t.starts_at', 'ASC');
        if ($user instanceof User) {
            $query->from('AppBundle\Entity\UserInTraining', 'l')
                     ->leftJoin('l.training', 'o')
                     ->select('t')
                     ->andWhere('l.user_id = :user_id')
                     ->andWhere('l.training_id IS NULL')
                     ->setParameter('user_id', $user->getId());
        }
        return $query->getQuery()->getResult();
    }
    
    public function getMyTrainings(User $user) {
        return $this->createQueryBuilder('t')
                     ->where('t.starts_at >= :start_at')
                     ->setParameter('start_at', new \DateTime('now'))
                     ->orderBy('t.starts_at', 'ASC')
                     ->from('AppBundle\Entity\UserInTraining', 'l')
                     ->leftJoin('l.training', 'o')
                     ->select('t')
                     ->andWhere('l.user_id = :user_id')
                     ->andWhere('l.training_id IS NOT NULL')
                     ->setParameter('user_id', $user->getId())
                     ->getQuery()
                     ->getResult();
    }
    
    /**
     * Gets count
     * 
     * @return int
     */
    public function count() {
        return $this->createQueryBuilder('u')->select('count(u.*)')->getQuery()->getSingleScalarResult();
    }    
    
}
